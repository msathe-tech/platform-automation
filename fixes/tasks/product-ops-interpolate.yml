# The inputs, outputs, params, filename, and filepath
# of this task file are part of its semantically versioned API.
# See our documentation for a detailed discussion of our semver API.
# See www.semver.org for an explanation of semantic versioning.

# code_snippet creds-interpolate start yaml
---
platform: linux

inputs:
- name: config # contains the base configuration file
- name: secrets # variable files to be made available
  optional: true

params:
  SECRETS_FILE:

outputs:
- name: interpolated-files
#contains all the *.yml files from `files/` input but after interpolation

run:
  path: bash
  args:
  - "-c"
  - |
    cat /var/version && echo ""
    set -eux

    pivnet_product_slug=$(om interpolate \
      --config ${SECRETS_FILE} \
      --path /pivnet-product-slug)

    echo "pivnet_product_slug"
    echo $pivnet_product_slug

    product_version=$(om interpolate \
      --config ${SECRETS_FILE} \
      --path /product-version)

    echo "product_version"
    echo $product_version

    OPS_FILES=$(om interpolate \
      --config ${SECRETS_FILE} \
      --path /ops_files)

    echo "OPS_FILES"
    echo $OPS_FILES

    if [ ${OPS_FILES} == "null" ]; then
      echo "OPS_FILES has no matter";
    else
      echo "OPS_FILES has matter";
    fi;

    ops_files_args=("")
    for of in ${OPS_FILES}
    do
      echo $of
      ops_files_args+=("-o config/${of}")
    done

    echo "ops_files_args"
    echo ${ops_files_args[@]}

    dirname config
    echo "copy files from original config to interpolated-files"
    mkdir -p interpolated-files
    cd config
    cp -R . ../interpolated-files/
    cd ..
    ls interpolated-files

    echo config/${pivnet_product_slug}/${product_version}/product.yml

    PRODUCT_FILE=("config/${pivnet_product_slug}/${product_version}/product.yml")
    echo $PRODUCT_FILE

    echo "runtime bosh interpolate"
    bosh int $PRODUCT_FILE ${ops_files_args[@]}

    PRODUCT_AND_OPS_FILE=("interpolated-files/${pivnet_product_slug}/${product_version}/product_and_ops.yml")
    echo $PRODUCT_AND_OPS_FILE
    touch $PRODUCT_AND_OPS_FILE
    ls interpolated-files/${pivnet_product_slug}/${product_version}

    echo "persistent bosh interpolate"
    bosh int $PRODUCT_FILE ${ops_files_args[@]} > ${PRODUCT_AND_OPS_FILE}

# code_snippet creds-interpolate end
